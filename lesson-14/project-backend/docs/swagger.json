{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "My movies app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of my movies app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://example.com/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Movies",
      "description": "Operations about movies."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/movies": {
      "get": {
        "tags": [
          "Movies"
        ],
        "summary": "Get list of movies",
        "operationId": "getMovies",
        "description": "Get list of movies with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "age"
            },
            "description": "All movies's fields can be mentioned. Default value - _id"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found movies!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found movies!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "movies",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "movies": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/movie"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 2
                        },
                        "perPage": {
                          "type": "number",
                          "example": 4
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 4
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 4
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Movies"
        ],
        "summary": "Create movie",
        "operationId": "createMovie",
        "description": "Create a movie with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "director",
                  "genre",
                  "favorite",
                  "releaseYear"
                ],
                "properties": {
                  "title": {
                    "description": "Movie's title",
                    "type": "string",
                    "example": "Avatar"
                  },
                  "director": {
                    "description": "Movie's director",
                    "type": "string",
                    "example": "James Cameron"
                  },
                  "genre": {
                    "description": "Movie's genre",
                    "type": "string",
                    "enum": [
                      "fantastic",
                      "love story"
                    ]
                  },
                  "favorite": {
                    "description": "Is movie favorite",
                    "type": "boolean",
                    "example": false
                  },
                  "releaseYear": {
                    "description": "Movie release year",
                    "type": "integer",
                    "example": 2009
                  },
                  "poster": {
                    "description": "Link to movie's poster",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a movie",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a movie!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/movie"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "movie": {
        "type": "object",
        "required": [
          "_id",
          "title",
          "director",
          "genre",
          "favorite",
          "releaseYear",
          "userId"
        ],
        "properties": {
          "_id": {
            "description": "Movie's id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "title": {
            "description": "Movie's title",
            "type": "string",
            "example": "Avatar"
          },
          "director": {
            "description": "Movie's director",
            "type": "string",
            "example": "James Cameron"
          },
          "genre": {
            "description": "Movie's genre",
            "type": "string",
            "enum": [
              "fantastic",
              "love story"
            ]
          },
          "favorite": {
            "description": "Is movie favorite",
            "type": "boolean",
            "example": false
          },
          "releaseYear": {
            "description": "Movie release year",
            "type": "integer",
            "example": 2009
          },
          "userId": {
            "description": "Movie's user id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "poster": {
            "description": "Link to movie's poster",
            "type": "string",
            "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}